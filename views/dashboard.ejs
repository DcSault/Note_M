<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <h1>Notes Dashboard</h1>

    <h2>Events</h2>
    <ul id="events-list">
        <% events.forEach(function(event) { %>
            <li><%= event.type %> - <%= event.timestamp %></li>
        <% }); %>
    </ul>

    <!-- Bar Chart Container -->
    <div>
        <h3>Event Types Distribution</h3>
        <canvas id="eventChart" width="400" height="200"></canvas>
    </div>

    <!-- Line Chart Container -->
    <div>
        <h3>Events Over Time</h3>
        <canvas id="timeChart" width="400" height="200"></canvas>
    </div>

    <script>
        // Assuming 'events' is passed from the server as a JSON object
        const events = <%- JSON.stringify(events) %>;

        // Prepare data for the bar chart
        const eventTypes = ['created', 'read', 'deleted'];
        const eventData = eventTypes.map(type => {
            return events.filter(event => event.type === type).length;
        });

        // Create the bar chart
        const barCtx = document.getElementById('eventChart').getContext('2d');
        const barChart = new Chart(barCtx, {
            type: 'bar',
            data: {
                labels: eventTypes,
                datasets: [{
                    label: '# of Events',
                    data: eventData,
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.5)',  
                        'rgba(255, 206, 86, 0.5)',  
                        'rgba(255, 99, 132, 0.5)'   
                    ],
                    borderColor: [
                        'rgba(75, 192, 192, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(255, 99, 132, 1)'
                    ],
                    borderWidth: 1
                }]
            }
        });

        // Prepare data for the line chart
        // Note: You'll need to update this part based on how you store timestamps in 'events'
        const timeLabels = [...new Set(events.map(event => event.timestamp))];
        const timeData = timeLabels.map(time => {
            return events.filter(event => event.timestamp === time).length;
        });

        // Create the line chart
        const lineCtx = document.getElementById('timeChart').getContext('2d');
        const lineChart = new Chart(lineCtx, {
            type: 'line',
            data: {
                labels: timeLabels,
                datasets: [{
                    label: '# of Events Over Time',
                    data: timeData,
                    borderColor: 'rgba(54, 162, 235, 1)',
                    fill: false
                }]
            }
        });
    </script>
</body>
</html>
